import os
import torch
from pdf2image import convert_from_path
import easyocr
import numpy as np

def pdf_to_text(pdf_path, output_path, reader):
    # Get the base name of the PDF file (without extension)
    base_name = os.path.splitext(os.path.basename(pdf_path))[0]

    # Create a text file path
    txt_file_path = os.path.join(output_path, f"{base_name}.txt")

    # Check if the file already exists
    if os.path.exists(txt_file_path):
        print(f"Text file already exists for {base_name}. Skipping conversion.")
        return

    # Convert PDF to list of images
    pages = convert_from_path(pdf_path, 300)

    with open(txt_file_path, 'w', encoding='utf-8') as f:
        # Iterate through all the pages
        for i, page in enumerate(pages):
            print(f"Processing {base_name} - page {i+1}")

            # Use EasyOCR to extract text from the image
            results = reader.readtext(np.array(page))
            text = '\n'.join([result[1] for result in results])

            # Write the text to the file
            f.write(f"Page {i+1}\n")
            f.write(text)
            f.write('\n\n')  # Add some space between pages

    print(f"Text extracted and saved to {txt_file_path}")

def process_directory(input_dir, output_dir):
    # Ensure output directory exists
    os.makedirs(output_dir, exist_ok=True)

    # Check if GPU is available
    gpu = torch.cuda.is_available()
    print(f"GPU available: {gpu}")

    # Initialize EasyOCR reader
    reader = easyocr.Reader(['en'], gpu=gpu)

    # Process each PDF file in the input directory
    for filename in os.listdir(input_dir):
        if filename.lower().endswith('.pdf'):
            pdf_path = os.path.join(input_dir, filename)
            pdf_to_text(pdf_path, output_dir, reader)

# Usage
input_directory = 'pdfs'
output_directory = 'textfiles'

process_directory(input_directory, output_directory)
